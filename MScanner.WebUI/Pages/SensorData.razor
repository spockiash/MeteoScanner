@page "/SensorData"
@using Microsoft.AspNetCore.SignalR.Client
@using MScanner.Models.Models
@using MScanner.WebUI.Hubs
@using MScanner.WebUI.Hubs.MScanner.WebUI.Hubs
@inject HubConnection HubConnection

<h1>Sensor Data</h1>

<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Temperature</th>
        <th>Humidity</th>
        <th>UV Intensity</th>
        <th>Air Quality</th>
        <th>Timestamp</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var sensorData in _sensorDataList)
    {
        <tr>
            <td>@sensorData.Id</td>
            <td>@sensorData.Temperature</td>
            <td>@sensorData.Humidity</td>
            <td>@sensorData.UVIntensity</td>
            <td>@sensorData.AirQuality</td>
            <td>@sensorData.Timestamp</td>
        </tr>
    }
    </tbody>
</table>

@code {
    private readonly List<SensorDataModel> _sensorDataList = new();
    private SensorDataHubProxy? _sensorDataHubProxy;
    private HubConnection _hubConnection;

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl("https://localhost:7080/sensorDataHub")
            .WithAutomaticReconnect()
            .Build();

        _sensorDataHubProxy = new SensorDataHubProxy(_hubConnection);

        await _sensorDataHubProxy.ConnectAsync();
        _sensorDataHubProxy.RegisterHandlers("ReceiveSensorData", OnReceiveSensorData);
    }

    public async ValueTask DisposeAsync()
    {
        if (_sensorDataHubProxy != null) await _sensorDataHubProxy.DisconnectAsync();
    }

    private void OnReceiveSensorData(SensorDataModel sensorData)
    {
        _sensorDataList.Add(sensorData);
        StateHasChanged();
    }
}